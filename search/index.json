[{"content":" 前言： 前一版p话太多，自己都看不下去了，故重构 已基本开发完备，代码见gayhub，缩放75%使用最佳 点击安装(需要暴力猴或tampermonkey插件) 我知道油猴脚本投日报不怎么合适，求别喷，还有我也不是很了解js（哭，你们的问题尽量解答吧 目录:\n暂无\n《NOI》是由€€£自主研发的一款全新开放世界冒险游戏。游戏发生在一个一个被称作「机房」的幻想世界，在这里，被神选中的仙贝将被授予「C++」，引导蒟蒻之力，在美妙的学习中寻找摸鱼的真谛和€€£失散的木琴——同时，逐步发掘「草」元素的真相。\n#发现问题 ciallo~这里是cjyx9捏，瓦达西在使用ybtoj时经常会被其朴实の外观还有伤眼睛的字体戳瞎呢，呐呐，真的是红豆泥麻烦呢，所以瓦达西决定进行⭐彻⭐底⭐的⭐调♂教。（呕\n##技术栈 找寻其需要的技术栈并不难，我们要实现的其实就是和exlg一样的效果，exlg用什么技术，基本我们就用什么，差不了多少。\nextend-luogu/extend-luogu: 大型网络游戏服务器加强插件，增添各种炫酷魔法。 (github.com)\n分析技术栈:\n运行于油猴容器\n使用语言如下 TypeScript55.5% JavaScript19.6% Vue18.9% CSS5.9% Shell0.1%\n其实总结来ts是js的加强版，我们只用学习js，vue对应前端框架，我们不需要实现复杂前端，js能搞定，故不学。css可以使用现成框架，有很多选择，由简单到复杂分别推荐bootstrap、mdui、Tailwind CSS.\n##方案设计 由于题目页面我使用的最多，这里首先简单设想了一下题目展示页的改造点，并不全面。\n#着手代码 ##准备工作 ###目录结构 exlg这个项目是工程化的，包括 CI，CD，规范化，组件化，模块化，构建等等。需要一定的 Node 和一些构建工具的基础，光看这目录结构就不是我们现在能学的。 所以，我们暂时采用简单目录结构编写项目。\n新建文件夹，目录结构如下（一个完整项目必须拥有好的目录结构才会显得清晰可拓展，单文件在巨大项目中是不可取的)：\nybt_style/\nuserscript.user.js -\u0026gt; 油猴使用的总和脚本文件,由各个页面对应的js文件拼接而来\nglobal/ -\u0026gt; 全局的代码，适用于每个ybt页面都有的操作（暂时不管，未来重构时会提）\nproblemshow/ -\u0026gt; 由于我们不止想美化单个页面，故将题目展示页单独列成文件夹，未来有了index/、ranklist/等等页面的文件时才不会混乱\n信息学奥赛一本通（C++版）在线评测系统.html -\u0026gt; 题目展示页的html文件，扒站获得（直接用edge在ybt的某个题目页面按下ctrl+s保存即可） 信息学奥赛一本通（C++版）在线评测系统_files/ -\u0026gt; edge扒站时产生的静态文件夹，不用管。 problemshow.css problemshow.js ### 编辑器的选择 给出我的环境：windows11下的VScode，使用插件：live server、auto close tag、color highlight、Path Intellisense、chatgpt，主题：Material Theme High Contrast，字体：Jetbrains Mono。\n其中，liveserver个人认为比较重要（实时刷新网页，解放双手）。\n翻日报时看到很多推荐vsc写c++的，个人认为vsc在写竞赛c++（单文件）的表现不如dev和ouuan大佬的cpeditor，体现在体积大，配置杂，调试难，与其折腾这个好看的vsc，不如老老实实dev。vsc更适合的是python和Js等开发，各种插件用着也很省心，另：别在环境上费太大时间。 ### 有关git 如果脚本只是自己写给自己用，那git无关紧要。 如果需要多人一起写或给很多人用，git还是要提一下。有关git用法自行百度，这里讲一些点：\n回答一下本应是目录结构的问题，油猴插件会自动识别直链中类似xx.xx.user.js的js文件为油猴脚本，所以以userscript.user.js命名 github raw日常在GFW那边，我们可以使用cdn方便用户获取脚本，见官方示例 1 2 3 4 5 6 // load any GitHub release, commit, or branch // note: we recommend using npm for projects that support it https://cdn.jsdelivr.net/gh/user/repo@version/file // load jQuery v3.2.1 https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js 所以我的脚本放在 github.com/nick-cjyx9/fxxkybt 那么cdn加速就在 https://cdn.jsdelivr.net/gh/nick-cjyx9/fxxkybt/userscript.user.js\n##入门：Hello World! 首先要明确油猴的大概原理：其实就是向网页加入一段自己的js代码以此改变网页内容，实现自动操作等。（只是方便理解，油猴早就抛弃了这种不安全的做法） 我们要模拟向网页插入我们的脚本，只需要在源码底部加入\n1 \u0026lt;script src=\u0026#34;problemshow.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 我们在problemshow.js里加入以下代码后，打开live server。\n1 alert(\u0026#34;hello world!\u0026#34;); 此时如果浏览器中如下输出，ybt页面基本无误，恭喜你，已经入门了脚本开发（雾。\n##实际功能的开发 个人开发者在开发脚本时，往往优先开发自己想要的功能（？，所以综合考虑，我选择先做复制按钮。\n###Copy it! 最终效果： 将按钮插入到网页中： 经过f12观察，我们发现所有样例都位于\u0026lt;pre\u0026gt;标签中，且此标签在网页中只负责放样例，所以我们只要选择所有pre标签遍历逐个添加按钮就行，\nproblemshow.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 function createCopyBtn() { let preTags = document.querySelectorAll(\u0026#34;pre\u0026#34;); //选中所有pre标签 for (let i = 0; i \u0026lt; preTags.length; i++) { const preTag = preTags[i]; let box = preTag.parentElement; let holder = document.createElement(\u0026#34;div\u0026#34;); //搭载按钮的容器 holder.innerHTML = ` \u0026lt;a class=\u0026#34;copy\u0026#34; style=\u0026#34; font-size: .8em; float: right; margin-right: 18px;\u0026#34;\u0026gt;copy\u0026lt;/span\u0026gt; `; //按钮 //此处留白给复制功能 box.appendChild(holder); //添加按钮 } } (function () { \u0026#39;use strict\u0026#39;; createCopyBtn(); })(); 运行此代码，可以看到按钮被添加在文本框下。接下来添加点击事件，\n点击事件： 作为一个Google-Oriented Programmer，我去百度找了一段代码1，直接套用是不行的，因为@click是vue的写法，我们对它稍作修改\n1 2 3 4 5 6 7 8 9 10 11 12 13 holder.onclick = function () { //监听按钮按下事件 const input = document.createElement(\u0026#39;input\u0026#39;) // 创建input对象 input.value = preTag.innerText // 设置复制内容 document.body.appendChild(input) // 添加临时实例 input.select() // 选择实例内容 document.execCommand(\u0026#39;Copy\u0026#39;) // 执行复制 document.body.removeChild(input) // 删除临时实例 truebtn = holder.children[0]; truebtn.innerText = \u0026#39;copied!\u0026#39;; setTimeout(() =\u0026gt; truebtn.innerText = \u0026#39;copy\u0026#39;, 1000); //设计一个copied效果提示用户 } 这样就成了，在测试时，我们又发现，它不能复制多行内容\n修第一个bug—善用搜索引擎： 这是我们遇到的第一个bug，由于我们还不具备独自修改的能力，故百度2 得知// 使用textarea支持换行，使用input不支持换行于是将创建input对象改为textarea，问题解决。 ###Be Stylish 接下来将会带大家注入简单css\n注：\njs实现点击一键复制文本-csdn\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHTML+JS点击复制文字效果（包含点击复制多行）最简单代码_ECMS帝国之家 (zhann.cn)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-01-28T15:50:57+08:00","permalink":"https://nick-cjyx9.github.io/post/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/","title":"油猴脚本开发指南"},{"content":" 脚本坑暂停，先搞作业 科学麻将不可取，永远不要相信发牌姬，五面听都给你流咯~ 摆摆摆 ","date":"2023-01-25T15:35:54+08:00","permalink":"https://nick-cjyx9.github.io/post/%E4%BB%8A%E6%97%A5bb/","title":"今日bb"},{"content":"\n年味渐浓mad抠搜猫粮\n更新了感觉原优化变好了？活挺不错，视频挺不错，期待反响如何\n","date":"2023-01-19T20:58:25+08:00","permalink":"https://nick-cjyx9.github.io/post/%E7%BB%99%E5%A4%A7%E5%AE%B6%E6%8B%9C%E4%B8%AA%E6%97%A9%E5%B9%B4/","title":"给大家拜个早年！"},{"content":"已基本开发完备，代码见gayhub缩放75%使用最佳\n这个版本p话过多，已重构\n另：重点不全在js脚本上，我知道tampermonkey投日报不怎么合适，求别喷，还有我也不是很了解js（哭，你们的问题尽量解答吧。\n目录:\n场景带入 发现问题·初探 技术栈的寻找 设计方案 着手代码 扒站遇到的问题 js的现学现卖 场景带入（如有雷同，纯属雷同~） 此段纯纯整活，不喜可直接翻到「发现问题」\n《NOI》是由€€£自主研发的一款全新开放世界冒险游戏。游戏发生在一个一个被称作「机房」的幻想世界，在这里，被神选中的仙贝将被授予「C++」，引导蒟蒻之力，在美妙的学习中寻找摸鱼的真谛和€€£失散的木琴——同时，逐步发掘「草」元素的真相。\n现在，你将在游戏中扮演24岁，还是学生，学习oi两年半的otto，在这之前只学过c++语言，并且在机房因为码力蒟蒻，处于最低弟位。你像往常一样来到只因房水题，你发现ybt的题目页在半屏下显示不全，缩小后字儿又太小，一点也不体贴你这个高二的老同志（bushi）。这下，问题来了~ 发现问题·初探 想要让自己舒服点，开始在网上搜索方案“怎么让网站字体变大”：\n“ctrl+滚轮” 已经试过了，放大会导致显示不完整 “新建html文件,在body标签中添加文字,这里以p标签内容为“演示文本”为例,这时网页将会显示字体默认大小和颜色。在head标签中添加style标签给页面设置css样式，选择p标签，字体大小用的是“font-size”属性，属性值为字体大小，这里以“30px”为例，这时“演示文本”字体将会变大。” 这个看起来挺靠谱，字儿挺多。你悟了，因为之前了解过web开发，并开始往改css的方向寻找。 寻找需要的技术栈 要做到修改这玩意儿，我要用到什么呢，html、js、css这些是肯定的。 你现在还有些疑问，去网上看看吧。 你上课摸鱼打开最近正火的chatgpt，问道 这里给大家整个花的，不得不说，它懂得真多，例子可能有点傻，将就看下去吧。 浏览器插件或用户脚本，我们从网上得知这个信息，有了方向，进一步寻找得到tampermonkey这款插件，稍作了解后，你上路了！\n设计解决方案 现在有了神器在手，你开始对ybt下手了 设想是要设想的，设想完了，做不做得到又是一回事。你打开VScode，新建文件夹，开始代码。 随口一提，翻日报时看到很多推荐vsc写c++的，个人认为vsc在写竞赛c++（单文件）的表现不如dev和ouuan大佬的cpeditor，体现在体积大，配置杂，调试难，与其折腾这个好看的vsc，不如老老实实dev。不是黑vsc，vsc更适合的是python和Js、ts等开发，各种插件用着也很省心 着手代码 扒站遇到的问题 otto凭借自己的计算机常识，知道首先要把ybt的网页下到本地方便调试，你迅速的建好目录(请忽略userscript.user.js，otto还不懂这些)\n嗯，扒了问题页的html代码，注入到网页中的是problemshow.js和problemshow.css。凭借之前对油猴的大致了解，油猴的原理大概是在网页底部运行脚本，于是你在扒下来的html文件低端加上\u0026lt;script src=\u0026quot;./problemshow.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;来模拟油猴。然后你直接用浏览器打开html文件，发现：\nbug0这就来了，和原站不一样啊，你经过一番尝试，试着像以前把没AC的题改AC的方法：f12，反正上一届dalao告诉我这调试网页的，那就试试吧。\n一片红！这不就发现问题了！访问的是本地的js，我并没有扒这些文件，都换成ybt网站的资源就行\n现在终于搞定这些问题了，开始写脚本！\n现学现卖js 作为一个Google-Oriented Programmer 遇到不会的JavaScript我们先百度。 你花了一个小时把这些全看完了，这些东西对于一个已经AC了P1001的你一点都不难。（这里讲起js篇幅会很长，js本身不难，光看代码能理解）你先准备实现一个小目标——把头头的这一堆隐藏掉。这并不难，取得selector然后display=none;就ok了 problemshow.css\n1 2 3 body \u0026gt; center \u0026gt; table.webtop{ display:none; } 现在你要通过脚本将css注入到网页中，有了百度，这也不难，你在网上找到这么一串代码,不难猜到（注释是猜想）\n1 2 3 4 5 6 7 8 9 10 11 12 13 function loadCss(){ //这应该是加载css的函数 let script = document.createElement(\u0026#39;link\u0026#39;); //css需要link标签引入，这个应该是创造一个标签 script.setAttribute(\u0026#39;rel\u0026#39;, \u0026#39;stylesheet\u0026#39;); script.setAttribute(\u0026#39;type\u0026#39;, \u0026#39;text/css\u0026#39;); script.setAttribute(\u0026#39;integrity\u0026#39;, \u0026#39;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\u0026#39;); script.setAttribute(\u0026#39;crossorigin\u0026#39;, \u0026#39;anonymous\u0026#39;); script.href = \u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\u0026#34;; //这个刚刚在入门里学过，是设置标签的一系列属性 document.documentElement.appendChild(script); //加载css } 你改了一下，它就变成我们的了\nproblemshow.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 function loadCss(){ let script = document.createElement(\u0026#39;link\u0026#39;); script.setAttribute(\u0026#39;rel\u0026#39;, \u0026#39;stylesheet\u0026#39;); script.setAttribute(\u0026#39;type\u0026#39;, \u0026#39;text/css\u0026#39;); script.href = \u0026#34;./problemshow.css\u0026#34;; document.documentElement.appendChild(script); } (function () { \u0026#39;use strict\u0026#39;; loadCss() })(); 刷新网页看看效果，确实头没了，效果很好\n这就算第一个功能实现了。\n1/28续更：往后会加快进度，少些p话\n","date":"2023-01-18T13:24:20+08:00","permalink":"https://nick-cjyx9.github.io/post/%E5%8D%B7%E9%A2%98%E7%B4%AF%E4%BA%86%E8%B7%9F%E6%88%91%E4%B8%80%E8%B5%B7%E4%BB%8E%E9%9B%B6%E5%AD%A6%E4%B9%A0%E7%BD%91%E9%A1%B5%E8%84%9A%E6%9C%AC/","title":"卷题累了？跟我一起从零学习网页脚本！"},{"content":" 在做了在做了\nbug0:ybt网站使用php+bom出了问题，网站顶部出现\u0026amp;#xFEFF占20px高度空白\nsolution：未解决\n现学现卖把css部分搞定了，解决了字体和缩放问题\n","date":"2023-01-15T19:50:32+08:00","permalink":"https://nick-cjyx9.github.io/post/%E6%B7%B1%E5%85%A5%E8%B0%83%E6%95%99ybtoj/","title":"深入调♂教ybtOJ"},{"content":" 瞎BB：说是胎儿级，其实大部分都是针对oier在写，尽可能做到完整吧。\n在搭建博客之前，我们首先要明白自己搭建博客的最终目的，在看过很多oier的博客之后，我发现几个普遍的问题：他们的博客大多外观十分精美，各种功能拓展齐全，有顶级域名甚至服务器备案，但是干货性内容却质量不高，或是建立了很久，博文篇数却极少。在这里说这些就是避免大家陷入过度追求样式的陷阱，毕竟博客只是博文的载体，博文的质量才是最先的。接下来开始教程：\n0x00 博客搭建的方式 最推荐：洛谷博客、博客园 这个应该不用多说，完全白嫖，只需要一个洛谷账号。 优点是白嫖，稳定（洛谷不日爆的前提下），简洁 还有百度收录上的优点，得利于洛谷的出名度，可以看到搜索引擎对于大伙的博客收录情况很好 缺点就是不自由，体现在发言没那么自由，样式没那么自由等 适合不爱折腾，又想让自己的博文被更多人看到的人 类似的方式还有博客园，相较洛谷更加自由\n利用静态网站生成器（Hugo、Hexo等，他们可以实现的远不止博客）加静态网站托管系统（GitHub pages、netlify等）实现： 这是本文主讲的方式，自由度极大，稳定，可折腾度高 **适用于能折腾，想要自己网站更炫酷的人（借此机会还可以学习到有关git和html5的知识）**如果你是这类人，请看下去\n如果你是富哥/姐，可选方案极多： i. 不想折腾，还想要自由：V我50，帮你做方案2全套 ii. 不想折腾，使用钞能力：wordpress等付费搭建，域名网站一站式 iii. 折腾：购买服务器，自行部署wordpress等博客系统。\n0x01 方案2 事前准备 前文提到的生成器Hexo和Hugo都十分优秀，这里图方便使用不需要Node.js的Hugo 工具：\n点击下载Hugo 由于是GitHub资源，可能下载较慢，耐心等待 下载后解压到你找得到的地方，win+R后输入SystemPropertiesAdvanced.exe点击环境变量选中用户变量-\u0026gt;Path-\u0026gt;编辑-\u0026gt;新建将你存放hugo.exe的文件夹地址输入，例如我的hugo.exe存放在E:\\Hugo，然后一路确定 就此hugo安装完成，win+R输入powershell呼出命令行，输入hugo后如果出现类似于如下信息则安装成功，可进行下一步。 1 2 3 4 Error: Unable to locate config file or config directory. Perhaps you need to create a new site. Run `hugo help new` for details. Total in 1 ms Q:我输入hugo后输出了'hugo' 不是内部或外部命令，也不是可运行的程序或批处理文件。这是怎么回事 A:请检查hugo.exe是否在你输入的目录内或环境变量是否配置好，有没有点击确认而不是叉掉。 点击下载Git安装一路next 注册Github github是一个开源及私有软件项目的托管平台,有很多有趣的项目,具体使用请百度,这里只讲大致内容: 进入Join Github,\n如果发现进不去,后续报错,有条件请挂t,无条件的话使用Watt Toolkit - 瓦特工具箱(Steam++官网) (steampp.net)点上Github后再访问\n输入你的email-\u0026gt;continue-\u0026gt;输入密码-\u0026gt;continue-\u0026gt;用户名-\u0026gt;输入n-\u0026gt;continue-\u0026gt;验证-\u0026gt;搞定\n配置 win+R输入powershell:\ngit配置 1 2 git config --global user.name \u0026#34;你的用户名\u0026#34; git config --global user.email \u0026#34;注册GitHub的邮箱\u0026#34; 输错可再次使用命令改. 2. ssh配置\n1 ssh-keygen -t rsa -C \u0026#34;你的邮箱\u0026#34; 之后三次询问皆直接回车即可.\n1 cat ~/.ssh/id_rsa.pub 将输出的以ssh-rsa开头的字符串复制.打开GitHub设置\n进入左侧SSH and GPG keys-\u0026gt; New SSH key,粘贴刚才取到的key。\n🎉就此，git与github配置完成\n0x02 开始搭建 首先，本文的一切都可能随hugo版本更新过时，优先参考Hugo中文文档 (gohugo.org)，不止hugo当你在使用任何项目遇到问题时，都应该优先参考文档。\n1. 生成站点 还是打开powershell，比如希望博客生成到 D:/my_blog 路径：\n1 hugo new site D:/my_blog 这样就在 hugo new site D:/my_blog 目录里生成了初始站点，进去目录：\ncd 命令：将工作目录切换到\u0026hellip; ls 命令：列出当前工作目录下所有文件及目录\n1 2 cd hugo new site D:/my_blog ls 你会看到这样的结构（只截取了部分）：\n1 2 3 4 5 ▸ archetypes/ -\u0026gt;文章模板 ▸ content/ -\u0026gt;存放文章和页面 ▸ themes/ -\u0026gt;主题 ▸ static/ -\u0026gt;网站静态资源（图片音频类的） config.toml -\u0026gt;配置文件 至此，站点生成完成。\n2.配置主题 hugo的主题很多，各个主题配置不同，难以统一讲解，这里挑选一个我在使用的nanxiaobei/hugo-paper: 🪺 A simple, clean, flexible Hugo theme (github.com)\n安装，在博客目录下使用 1 2 git init git submodule add https://github.com/nanxiaobei/hugo-paper themes/paper 安装完成后 找到\\themes\\paper目录下examplesite文件夹，将里面的内容复制到my_blog也就是博客根目录,替换config.toml，打开config.toml修改配置theme = \u0026quot;hugo-paper\u0026quot;为theme = \u0026quot;paper\u0026quot;。 搞定 此时，在博客目录下执行hugo server，并访问localhost:1313，你会看到hugo生成的实例站点 配置 确认实例站点无误后，可以删掉它默认的文章（如下），开始配置站点 打开主目录下config.toml修改配置，下面放出我的配置作为参考,大家可以去nick-cjyx9/blog-comment (github.com)参考我博客的一切配置。三个优化脚本也放在这里了(更多优化参见Hugo建站经验 - KanataRoom (nick-cjyx9.github.io),如果有人看会一直更)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 baseURL = \u0026#34;https://nick-cjyx9.github.io\u0026#34; # title = \u0026#34;Hugo Themes\u0026#34; author = \u0026#34;Nick Chen\u0026#34; copyright = \u0026#34;Copyright © 2022–2023, Nick Chen; all rights reserved.\u0026#34; paginate = 8 languageCode = \u0026#34;zh-cn\u0026#34; DefaultContentLanguage = \u0026#34;zh-cn\u0026#34; enableInlineShortcodes = true # prevent build failures when using Hugo\u0026#39;s Instagram shortcode due to deprecated Instagram API. # See https://github.com/gohugoio/hugo/issues/7228#issuecomment-714490456 ignoreErrors = [\u0026#34;error-remote-getjson\u0026#34;] # ------------------------------ theme = \u0026#34;paper\u0026#34; title = \u0026#34;KanataRoom\u0026#34; [params] color = \u0026#39;linen\u0026#39; twitter = \u0026#39;cjyx9x\u0026#39; github = \u0026#39;nick-cjyx9\u0026#39; avatar = \u0026#39;cjyx9@outlook.com\u0026#39; name = \u0026#39;Nick\u0026#39; bio = \u0026#34;Do not repeat yourself.\u0026#34; # ------------------------------ # needed to render raw HTML (e.g. \u0026lt;sub\u0026gt;, \u0026lt;sup\u0026gt;, \u0026lt;kbd\u0026gt;, \u0026lt;mark\u0026gt;) [markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true [menu] [[menu.main]] identifier = \u0026#34;about\u0026#34; name = \u0026#34;About\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 10 [[menu.main]] identifier = \u0026#34;contact\u0026#34; name = \u0026#34;Contact\u0026#34; url = \u0026#34;/contact/\u0026#34; weight = 10 [[menu.main]] identifier = \u0026#34;Todolist\u0026#34; name = \u0026#34;Todolist\u0026#34; url = \u0026#34;/post/手动置顶假期todolist\u0026#34; weight = 10 [[menu.main]] identifier=\u0026#34;Drytext\u0026#34; name=\u0026#34;DryText\u0026#34; url=\u0026#34;/tags/干货/\u0026#34; weight=8 [[menu.main]] identifier=\u0026#34;Friends\u0026#34; name=\u0026#34;Friends\u0026#34; url=\u0026#34;/friends\u0026#34; weight=8 [taxonomies] category = \u0026#34;categories\u0026#34; tag = \u0026#34;tags\u0026#34; series = \u0026#34;series\u0026#34; [privacy] [privacy.vimeo] disabled = false simple = true [privacy.twitter] disabled = false enableDNT = true simple = true [privacy.instagram] disabled = false simple = true [privacy.youtube] disabled = false privacyEnhanced = true [services] [services.instagram] disableInlineCSS = true [services.twitter] disableInlineCSS = true 至此，博客搞定，每次配置完想要预览就使用hugo server指令\n写文章 新建文章可使用套用archetype/中的模板,嫌麻烦可用脚本,见Hugo建站经验 - KanataRoom (nick-cjyx9.github.io) 1 hugo new post/xxx.md 然后就可以用你喜欢的编辑器愉快写文了\n0x03 上线吧! 本地博客搞定后,就可以上线了,首先在博客根目录执行,\n1 hugo -D 作用是在/public文件夹下生成网站静态文件,继续\n1 2 3 4 cd public git init git add . git commit -m\u0026#34;update\u0026#34; 然后前往github.com 新建一个仓库,仓库名填你的用户名.github.io,其他不用管,点击创建后,复制第二个代码并执行,下图仅为实例 如果上传成功，刷新你的仓库页面将会有一系列文件，和这个github-pages栏目，如果小火箭右侧的tag变为Active代表博客部署成功，你就可以通过你的用户名.github.io访问博客了！\n如果上传失败，请再次尝试git push,可能是网络问题。\n至此，教程完结，以上的新建文章、预览、上传github操作均有简化脚本，在Hugo建站经验 - KanataRoom (nick-cjyx9.github.io) ","date":"2023-01-15T19:47:43+08:00","permalink":"https://nick-cjyx9.github.io/post/%E8%83%8E%E5%84%BF%E7%BA%A7%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97/","title":"胎儿级博客搭建指北"},{"content":"假期闲的打游戏，不如开俩新坑 坑1：ybt改造计划，ybt半屏体验真不行 坑2：oier搭建博客完全指北 圣嘉然保佑 Saint Diana Bless\n嘉心糖今晚要狠狠的做大牌，胡5倍役满！\n","date":"2023-01-15T19:44:46+08:00","permalink":"https://nick-cjyx9.github.io/post/%E5%BC%80%E6%96%B0%E5%9D%91/","title":"开新坑"},{"content":"\n原来我就是二次元 -50￥\n","date":"2023-01-14T11:39:53+08:00","permalink":"https://nick-cjyx9.github.io/post/%E4%BA%8C%E6%AC%A1%E5%85%83%E5%95%A5%E5%8D%B5%E7%9A%84%E9%92%B1%E7%9C%9F%E5%A5%BD%E8%B5%9A/","title":"二次元啥卵的钱真好赚"},{"content":"【题目直达】 信息学奥赛一本通（C++版）在线评测系统 (ssoier.cn)\nhttps://www.luogu.com.cn/problem/P1120\n【tips】 ybt和lg是一样的题目，但是数据不同，ybt需要排除长度大于50的棍子，lg规定了范围不用排\n【题目描述】 乔治有一些同样长的小木棍，他把这些木棍随意砍成几段，直到每段的长都不超过50。现在，他想把小木棍拼接成原来的样子，但是却忘记了自己开始时有多少根木棍和它们的长度。给出每段小木棍的长度，编程帮他找出原始木棍的最小可能长度。\n【输入】 第一行为一个单独的整数N表示砍过以后的小木棍的总数，其中N≤60，第二行为N个用空个隔开的正整数，表示N根小木棍的长度。\n【输出】 仅一行，表示要求的原始木棍的最小可能长度。\n【输入样例】 1 9 5 2 1 5 2 1 5 2 1 【输出样例】 1 6 【题解】 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 #include \u0026lt;bits/stdc++.h\u0026gt; int cnt,N,stk[70],tot,maxn=-1; bool vis[70];int nxt[1000]; template\u0026lt;typename L\u0026gt; inline void Read(L \u0026amp;X){ //tip0：快读 char c=getchar();L zhi=0,fu=1; while(not isdigit(c)){if(c==\u0026#39;-\u0026#39;)fu=-1;c=getchar();} while(isdigit(c)){zhi=(zhi\u0026lt;\u0026lt;1)+(zhi\u0026lt;\u0026lt;3)+c-\u0026#39;0\u0026#39;;c=getchar();} X=fu*zhi; } inline void dfs(int its,int sum,int len){ //爆搜思路 its:上一根拼接的棍子 sum：已拼棍子的长度 len：目标长度 if(sum+stk[its]==len){ //已完成此根拼接 for(int j=1;j\u0026lt;=N;j++){ //去找下一根的头，同样tip2：从头找以保证最长 if(vis[j]==0){ vis[j]=1; dfs(j,0,len); vis[j]=0; //tip3：vis存储家访过的棍棍，方便回溯 return ; } }std::cout\u0026lt;\u0026lt;len;exit(0); //tip1：找不到就说明已完成所有工作，输出答案后立即退出，不做多余搜索 }else if(sum+stk[its]\u0026lt;len) for(int i=its+1;i\u0026lt;=N;i++){ //tip2：此处从下一根开找，保证从大到小拼接 if(vis[i]==0\u0026amp;\u0026amp;stk[its]+stk[i]+sum\u0026lt;=len){ vis[i]=1; dfs(i,sum+stk[its],len); vis[i]=0; //tip3 if(len-sum-stk[its]==stk[i]||sum==0)return ; /*tip4：其实我当时也没想明白这个，所以借lg题解区： 如果当前长棍剩余的未拼长度等于当前木棍的长度或原始长度，继续拼下去时却失败了，就直接回溯并改之前拼的木棍。 当前长棍剩余的未拼长度等于当前木棍的长度时，这根木棍在最优情况下显然是拼到这（如果用更多短木根拼完剩下的这段，把这根木棍留到后面显然不如把更多总长相等的短木棍扔到后面）。如果在最优情况下继续拼下去失败了，那肯定是之前的木棍用错了，回溯改即可。 原来的长棍还一点没拼时，现在正在放入一根木棍。很明显，这根木棍还没有跟其它棍子拼接，如果现在拼下去能成功话，它肯定是能用上的，即自组或与其它还没用的木棍拼接。但继续拼下去却失败，说明现在这根木棍不能用上，无法完成拼接，所以回溯改之前的木棍。 */ i=nxt[i]; if(i==N)return ; //tip5：这个长度本来就不行了，不能再用一样长度的了，直接跳到比它小的第一个去 } } } bool cmp(int a,int b){return a\u0026gt;b;} int main(){ Read(cnt);int temp; for(int i=1;i\u0026lt;=cnt;i++){ //非法数据处理 Read(temp); if(temp\u0026lt;=50){ stk[++N]=temp; tot+=stk[N]; if(stk[N]\u0026gt;maxn)maxn=stk[N]; } } std::sort(stk+1,stk+N+1,cmp); //tip2：从大到小排序 nxt[N]=N; for(int i=N-1;i\u0026gt;0;i--){ if(stk[i]==stk[i+1]) nxt[i]=nxt[i+1]; else nxt[i]=i; } for(int i=maxn;i\u0026lt;=tot;i++){ if(tot%i!=0)continue; //tip6：原本的棍棍长度符合： //是总长的因数 //最短的棍棍\u0026lt;=长度\u0026lt;=总长 vis[1]=1; dfs(1,0,i); memset(vis,0,sizeof(vis)); } } ","date":"2023-01-13T22:08:59+08:00","permalink":"https://nick-cjyx9.github.io/post/ybt_1442_%E6%8B%BC%E6%A3%8D%E5%AD%90/","title":"Ybt_1442_拼棍子"},{"content":"既然决定了在这里发牢骚，总得写点qq空间不能写的吧。。\n拒绝犹太审美，从元首做起！\n1/13日记流水账：\n早上又起晚了，操不能熬夜了，我要早起\n彻夜之歌补完了，是真的香，后几集观感有点差，主线剧情走太多，总的来说期待续作\n大早上改题lgP1120，TLE-\u0026gt;WA剪枝优化太多了吧。。（貌似是我尝试切的第一道蓝题）最后还是看了题解\n作业写着一天就挺快的，感觉一天像初三暑假摆烂肝原神时候的3天\n民族主义就是，“对你从没做过的事倍感自豪，对你从未见过的人恨之入骨”\n（这里本来有一大段话）还是别把自己太当回事。\n以后不发牢骚了，键政禁止\n最近老想涩涩的东西，果然是因为粉色软件看多了吗😅\n如果这里被熟人发现的话，我就结束了罢（\n唐可可，我真的好喜欢你啊！ ","date":"2023-01-13T16:41:13+08:00","permalink":"https://nick-cjyx9.github.io/post/%E4%BB%8A%E6%97%A5%E8%B6%A3%E9%97%BB/","title":"今日趣闻"},{"content":"【题目直达】 http://ybt.ssoier.cn:8088/problem_show.php?pid=1220\n【题目描述】 单词接龙是一个与我们经常玩的成语接龙相类似的游戏，现在我们已知一组单词，且给定一个开头的字母，要求出以这个字母开头的最长的“龙”（每个单词都最多在“龙”中出现两次），在两个单词相连时，其重合部分合为一部分，例如beast和astonish，如果接成一条龙则变为beastonish，另外相邻的两部分不能存在包含关系，例如at和atide间不能相连。\n【输入】 输入的第一行为一个单独的整数n(n\u0026lt;=20)表示单词数，以下n行每行有一个单词（只含有大写或小写字母，长度不超过20），输入的最后一行为一个单个字符，表示“龙”开头的字母。你可以假定以此字母开头的“龙”一定存在。\n【输出】 只需输出以此字母开头的最长的“龙”的长度。\n【输入样例】 1 2 3 4 5 6 7 5 at touch cheat choose tact a 【输出样例】 1 23 【题解】 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; int n,hans;char words[30][30],key; //定义存储变量 short vis[30],DEBUG=0; //每个单词都最多在“龙”中出现两次，使用short类型vis数组 template\u0026lt;typename L\u0026gt; inline void logr(L a){ if(DEBUG)cout\u0026lt;\u0026lt;a; } //debug控制是否输出过程变量（就是调试） inline int coin(char a[],char b[]){ /* coin(char[],char[])-\u0026gt;int 判断形参a，b是否能首尾相接， 返回重合部分大小 */ int i=strlen(a)-1,j=0; while(1){ if(j==strlen(b)) return 0; //超出边界，尚未搜到a串尾字母 if(a[i]==b[j]){ //从标记点回搜 int ans=1; for(int o=j-1;o\u0026gt;=0;o--){ if(b[o]!=a[i-j+o])return 0; ans++; //不重合一票否决 } return (ans!=strlen(a)\u0026amp;\u0026amp;ans!=strlen(b))?ans:0; //对于coin(\u0026#34;at\u0026#34;,\u0026#34;atide\u0026#34;)此类的特判 } j++; } } inline void dfs(int h,int cnt){ if(cnt\u0026gt;hans)hans=cnt; //更新答案 for(int i=1;i\u0026lt;=n;i++){ int coinn=coin(words[h],words[i]); //遍历，\u0026#34;找尾巴\u0026#34; if(coinn!=0\u0026amp;\u0026amp;vis[i]!=2){ vis[i]++; logr(words[i]);logr(\u0026#34;-\u0026gt;\u0026#34;); dfs(i,strlen(words[i])+cnt-coinn); vis[i]--; //标准搜索回溯 }}logr(\u0026#39;\\n\u0026#39;); } int main(){ cin\u0026gt;\u0026gt;n; for(int i=1;i\u0026lt;=n;i++)cin\u0026gt;\u0026gt;words[i]; cin\u0026gt;\u0026gt;key; for(int i=1;i\u0026lt;=n;i++) if(words[i][0]==key){ //可行性剪枝，key开头的单词打头 vis[i]++; logr(words[i]);logr(\u0026#34;--\\n\u0026#34;); dfs(i,strlen(words[i])); vis[i]--; } cout\u0026lt;\u0026lt;hans; return 0; } ","date":"2023-01-12T16:26:41+08:00","permalink":"https://nick-cjyx9.github.io/post/ybt_1220_%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/","title":"Ybt_1220_单词接龙"},{"content":"\n","date":"2023-01-09T14:50:56+08:00","permalink":"https://nick-cjyx9.github.io/post/%E7%BA%AA%E5%BF%B5%E4%B8%80%E4%B8%8B%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%9B%BD%E5%A3%AB/","title":"纪念一下第一次国士"},{"content":"我是八一特种兵，快乐寒假从我开始！ ","date":"2023-01-09T11:14:38+08:00","permalink":"https://nick-cjyx9.github.io/post/%E5%96%9C%E6%8F%9038%E5%A5%97%E8%AF%95%E5%8D%B7/","title":"喜提38套试卷！"},{"content":"22-01-08 假期第二天：摆烂 10am 家长会~烦躁的一天啊\n6pm 明天不能再摆了，hh todolist上再加一份：https://www.bilibili.com/video/BV1Ad4y1j7Ae 影视飓风的征集，挺有意思的\n6pm 不能摆了，晚上得学习\n有些时候bat居然比python好用，乐\nos.system真心僵硬\n","date":"2023-01-08T17:59:06+08:00","permalink":"https://nick-cjyx9.github.io/post/%E5%81%87%E6%9C%9F%E7%AC%AC%E4%BA%8C%E5%A4%A9/","title":"假期第二天"},{"content":" 第一点hugo的版本一定要新，很多主题在老版本报错 第二在hugo new xxx.md时，使用的front matter 默认使用---分割线和类似json的写法，这里推荐换作+++，默认配置在/archetypes/default.md修改，附上个人配置: 1 2 3 4 5 6 7 8 +++ author= \u0026#34;cjyx9\u0026#34; title= \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date= \u0026#34;{{ .Date }}\u0026#34; tags= [ \u0026#34;\u0026#34;, ] +++ 个人认为网站更新部署过程繁琐，写了3个bat脚本，附上（置于blog的根目录） newPost.bat 1 2 3 4 5 6 7 8 @echo off set /p name=Enter post name: set /p in=R U sure it\u0026#39;s %name%?(press enter to continue,ctrl+c to exit) hugo new /post/%name%.md E:\\Typora\\Typora.exe E:/gayhub/blog/content/post/%name%.md set /p in=Press `enter` to apply. ::这两行可不写 deploy.bat\n1 2 3 4 5 6 7 8 9 10 11 cd E:/gayhub/blog hugo -D cd public git add . git commit -m\u0026#34;auto commit miao~\u0026#34; git status ::检查下状态以保证commit正常，可不写 @echo off set /p in=Press `enter` to apply. git push set /p in=Press `enter` to exit. server.bat\n1 2 3 \u0026#34;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026#34; --profile-directory=Default http://localhost:1313 hugo server set /p in=Press `enter` to apply. 关于百度收录： 提交 bd资源平台可以看到收录数量 评论系统 像gitcomment和disqus这种系统比较常见, 推荐一个用github discussion的giscus 如果主题不自带可以直接去/themes/xxx/layouts改\nmarkdown 力荐typora，界面清新，功能强大，picgo图床加上snipaste很舒服，目前买断88￥，3台机子可用，有经济实力可入正 其次vscode加markdown插件：markdown all in one 和 Markdown Preview Mermaid Support基本可以实现预览和图表\n图床：\n推荐smms+snipaste\npicgo似乎挺强大，但是个人不爱用，可以了解\n","date":"2023-01-08T00:00:00Z","permalink":"https://nick-cjyx9.github.io/post/hugo%E5%BB%BA%E7%AB%99%E7%BB%8F%E9%AA%8C/","title":"Hugo建站经验"},{"content":"22-01-07 假期第一天：摆烂 ","date":"2023-01-07T15:46:06+08:00","permalink":"https://nick-cjyx9.github.io/post/%E5%81%87%E6%9C%9F%E7%AC%AC%E4%B8%80%E5%A4%A9/","title":"假期第一天"},{"content":"Hello world! ","date":"2023-01-07T12:39:56+08:00","permalink":"https://nick-cjyx9.github.io/post/hello/","title":"Hello"},{"content":" 首先是每天whk作业得完成 影视飓风投稿 想学习web开发 oi至少把ybt第一本学完 补番《clannad》《三狮1》（已完成）《三狮2》 把网课摆烂的追回 ","date":"2022-01-01T00:00:00Z","permalink":"https://nick-cjyx9.github.io/post/todolist/","title":"todolist"}]